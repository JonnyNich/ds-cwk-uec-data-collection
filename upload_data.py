import requests
import datetime
import random
import string

url = "https://uec-collection.azurewebsites.net/api/HttpTrigger?"

# We will generate our data locally and place it in to an array of size 95
# Each element in the array corresponds to a data-point that'll be passed to the JSON body
# The order correlates to the order outlined in the database schema

# We'll start off by defining some variables to use in our body
provider_code = "".join(random.sample(string.ascii_uppercase*3, 3)) # Generate a random 3-letter code
site_code = "".join([provider_code, "".join(random.sample(string.ascii_uppercase*2, 2))]) # Same as above, but append two more letters
hospitals = ["Alpha Hospital", "Bravo Hospital", "Charlie Hospital", "Delta Hospital", "Echo Hospital", "Foxtrot Hospital"]

body = {
    "provider_code": provider_code,
    "site_code": site_code,
    "reporting_date": datetime.datetime.now().strftime("%Y/%m/%d"),
    "submission_datetime": datetime.datetime.now().strftime("%Y/%m/%d %H:%M:%S"),
    "ae_diverts_from": "\n".join(random.sample(hospitals, 2)),
    "ae_diverts_to": "\n".join(random.sample(hospitals, 2)),
    "ae_type1" : random.randint(0, 2000),  
    "ae_type1_resus" : random.randint(0, 2000),   
    "ae_type1_majors" : random.randint(0, 2000), 
    "ae_type1_minors" : random.randint(0, 2000), 
    "ae_type1_paeds" : random.randint(0, 2000), 
    "ae_type2" : random.randint(0, 2000), 
    "ae_type3" : random.randint(0, 2000), 
    "breach_4h_type1" : random.randint(0, 2000), 
    "breach_4h_type1_resus" : random.randint(0, 2000), 
    "breach_4h_type1_majors" : random.randint(0, 2000), 
    "breach_4h_type1_minors" : random.randint(0, 2000), 
    "breach_4h_type1_paeds" : random.randint(0, 2000), 
    "breach_4h_type2" : random.randint(0, 2000), 
    "breach_4h_type3" : random.randint(0, 2000), 
    "seen_in_60m_type1" : random.randint(0, 2000), 
    "streamed_to_pc_streaming" : random.randint(0, 2000), 
    "breach_4h_pc_streaming" : random.randint(0, 2000), 
    "admissions" : random.randint(0, 2000), 
    "emergency_admissions" : random.randint(0, 2000), 
    "emergency_admissions_ae" : random.randint(0, 2000), 
    "discharges" : random.randint(0, 2000), 
    "amb_arrivals" : random.randint(0, 2000), 
    "amb_handover_delay_30to60" : random.randint(0, 2000), 
    "amb_handover_delay_60plus" : random.randint(0, 2000), 
    "trolley_wait_4to12" : random.randint(0, 2000), 
    "trolley_wait_12plus" : random.randint(0, 2000), 
    "urg_ops_cancelled" : random.randint(0, 2000), 
    "ae_closures" : random.randint(0, 2000), 
    "ae_closures_mins" : random.randint(0, 2000), 
    "ae_diverts" : random.randint(0, 2000), 
    "ae_diverts_duration" : random.randint(0, 2000), 
    "booked_type1" : random.randint(0, 2000), 
    "breach_4h_booked_type1" : random.randint(0, 2000), 
    "booked_type2" : random.randint(0, 2000), 
    "breach_4h_booked_type2" : random.randint(0, 2000), 
    "booked_other" : random.randint(0, 2000), 
    "breach_4h_other" : random.randint(0, 2000), 
    "beds_open_core_adult_ga" : random.randint(0, 2000), 
    "beds_open_adult_ga_esc" : random.randint(0, 2000), 
    "beds_open_adult_ga" : random.randint(0, 2000), 
    "beds_occupied_adult_ga" : random.randint(0, 2000), 
    "beds_open_core_paeds" : random.randint(0, 2000), 
    "beds_open_paeds_esc" : random.randint(0, 2000), 
    "beds_open_paeds_ga" : random.randint(0, 2000), 
    "beds_open_paeds" : random.randint(0, 2000), 
    "bed_stock_open_core_ga" : random.randint(0, 2000), 
    "beds_open_ga_esc" : random.randint(0, 2000), 
    "beds_open_ga" : random.randint(0, 2000), 
    "beds_occupied" : random.randint(0, 2000), 
    "beds_closed_dv" : random.randint(0, 2000), 
    "beds_closed_unoccupied" : random.randint(0, 2000), 
    "beds_closed_dv_adult_ga" : random.randint(0, 2000), 
    "beds_closed_dv_adult_ga_unoccupied" : random.randint(0, 2000), 
    "beds_closed_dv_paeds_ga" : random.randint(0, 2000), 
    "beds_closed_dv_paeds_ga_unoccupied" : random.randint(0, 2000), 
    "beds_closed_covid_adult_ga" : random.randint(0, 2000), 
    "beds_closed_covid_adult_ga_unoccupied" : random.randint(0, 2000), 
    "beds_closed_covid_paeds_ga" : random.randint(0, 2000), 
    "beds_closed_covid_paeds_ga_unoccupied" : random.randint(0, 2000), 
    "beds_closed_other_adult_ga" : random.randint(0, 2000), 
    "beds_closed_other_adult_ga_unoccupied" : random.randint(0, 2000), 
    "beds_closed_other_paeds_ga" : random.randint(0, 2000), 
    "beds_closed_other_paeds_ga_unoccupied" : random.randint(0, 2000), 
    "beds_closed_rsv_paeds_ga" : random.randint(0, 2000), 
    "beds_closed_rsv_paeds_ga_unoccupied" : random.randint(0, 2000), 
    "ga_influenza" : random.randint(0, 2000), 
    "hdu_influenza" : random.randint(0, 2000), 
    "influenza_24h" : random.randint(0, 2000), 
    "long_stay_7plus" : random.randint(0, 2000), 
    "long_stay_14plus" : random.randint(0, 2000), 
    "long_stay_21plus" : random.randint(0, 2000), 
    "beds_av_adult_cc" : random.randint(0, 2000), 
    "beds_av_adult_l3cc" : random.randint(0, 2000), 
    "beds_occ_adult_cc" : random.randint(0, 2000), 
    "beds_occ_adult_l3cc" : random.randint(0, 2000), 
    "beds_av_paeds_ic" : random.randint(0, 2000), 
    "beds_occ_paeds_ic" : random.randint(0, 2000), 
    "cots_av_neonatal_ic" : random.randint(0, 2000), 
    "cots_av_neonatal_l3ic" : random.randint(0, 2000), 
    "cots_occ_neonatal_ic" : random.randint(0, 2000), 
    "cots_occ_neonatal_l3ic" : random.randint(0, 2000), 
    "p1_admission_ordinary_cancellations" : random.randint(0, 2000), 
    "p2_admission_ordinary_cancellations" : random.randint(0, 2000), 
    "p3_admission_ordinary_cancellations" : random.randint(0, 2000), 
    "p4_admission_orindary_cancellations" : random.randint(0, 2000), 
    "p1_admission_daycase_cancellations" : random.randint(0, 2000), 
    "p2_admission_daycase_cancellations" : random.randint(0, 2000), 
    "p3_admission_daycase_cancellations" : random.randint(0, 2000), 
    "p4_admission_daycase_cancellations" : random.randint(0, 2000), 
}

http_response = requests.post(url, json=body)

print (http_response.status_code, http_response.text)